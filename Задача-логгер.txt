Добрый день.

В качестве тестового задания предлагаю выполнить следующее:
Написать на любом удобном языке простой протоколировщик. То есть класс или набор функций, позволяющих записывать, например, трассировку вызовов. Должны присутствовать следующие функции: запись информационного сообщения, запись предупреждения и запись ошибки.
Каждая запись в лог начинается с даты и времени записи. Затем следует тип сообщения (info, warn, err), дальше само сообщение. Лог будет записываться в файл. Желательно, чтобы лог поддерживал "дозапись", то есть чтобы файл не перезаписывался каждый раз с нуля. Бонусом будет поддержка потокобезопасности.

Оформить в формате dll + приложение, позволяющее протестировать протоколировщик.

Простейший пример использования:

void DoSomething()
{
     try
     {
           log.Trace("DoSomething - entry");
           ......
           ......
     }
      catch(ApplicationException ex)
      {
           log.Warn(ex.Message);
      }
      catch (Exception ex)
      {
             log.Error(ex.Message);
      }
      finally
      {
            log.Trace("DoSomething - leave")
      }
}


Пример результата:
.......
.......
15.03.22 12:22:54.1034    |-INFO-|   DoSomething - entry
15.03.22 12:22:57.6028    |-ERROR-|   Bad Things Happened
15.03.22 12:22:57.9028    |-INFO-|   DoSomething - leave
.......
.......

Остальной функционал, архитектура классов или функций, обработка ошибок - за вами. Задача не столько на функционал, сколько для того, чтобы определить текущий уровень знания и понимания программирования в целом. Сильно мудрить и усложнять не стоит, главное, чтобы код работал, был грамотно оформлен и структурирован (кодгайд и правила нейминга можно использовать любой на своё усмотрение). Поддержка и демонстрация потокобезопасности приветствуется.
Можно уточнять детали, задавать вопросы можно по телефону или по почте.